{"version":3,"sources":["../src/server.js"],"names":["bodyParser","require","Cors","jwt","port","process","env","PORT","app","db","use","req","res","next","header","express","static","storage","multer","diskStorage","destination","file","cb","filename","Date","now","originalname","upload","errHandler","err","MulterError","json","error","message","urlencoded","extended","verifyToken","headers","token","status","verify","decoded","userId","user_id","get","send","sql","all","result","compare","a","b","dateCreated","rows","details","result1","all_feed","concat","sort","gif_result","post","article_id","params","articleId","flagged","run","listen","console","log","chalk","red"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,aAAaC,QAAQ,aAAR,CAAnB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,MAAMF,QAAQ,cAAR,CAAZ;AACA,IAAMG,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,KAAKR,QAAQ,MAAR,CAAX;;AAEAO,IAAIE,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,wCAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAD;AACD,CALD;;AAOAL,IAAIE,GAAJ,CAAQ,SAAR,EAAmBK,kBAAQC,MAAR,CAAe,QAAf,CAAnB;AACA;AACA,IAAMC,UAAUC,iBAAOC,WAAP,CAAmB;AACjCC,eAAa,qBAACT,GAAD,EAAMU,IAAN,EAAYC,EAAZ,EAAmB;AAC9BA,OAAG,IAAH,EAAS,QAAT;AACD,GAHgC;AAIjCC,YAAU,kBAACZ,GAAD,EAAMU,IAAN,EAAYC,EAAZ,EAAmB;AAC3BA,OAAG,IAAH,EAAYE,KAAKC,GAAL,EAAZ,SAA0BJ,KAAKK,YAA/B;AACD;AANgC,CAAnB,CAAhB;AAQA,IAAMC,SAAS,sBAAO;AACpBV,WAASA;AADW,CAAP,CAAf;AAGA,IAAMW,aAAW,SAAXA,UAAW,CAACC,GAAD,EAAMlB,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACxC,MAAIgB,eAAeX,iBAAOY,WAA1B,EAAuC;AACrC,WAAOlB,IAAImB,IAAJ,CAAS;AACdC,aAAO,eADO;AAEdC,eAASJ,IAAII;AAFC,KAAT,CAAP;AAID;AACF,CAPD;AAQAzB,IAAIE,GAAJ,CAAQkB,UAAR;AACApB,IAAIE,GAAJ,CAAQR,MAAR;;AAEAM,IAAIE,GAAJ,CAAQV,WAAWkC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACA3B,IAAIE,GAAJ,CAAQV,WAAW+B,IAAX,EAAR,E,CAA4B;;;AAG5B,IAAMK,cAAc,SAAdA,WAAc,CAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAI,CAACF,IAAI0B,OAAJ,CAAYC,KAAjB,EAAwB;AACtB,WAAO1B,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAE,UAAU,aAAZ,EAA2B,SAAS,sBAApC,EAArB,CAAP;AACD;AACD,MAAMO,QAAQ3B,IAAI0B,OAAJ,CAAYC,KAA1B;AACA,MAAIA,UAAU,MAAd,EAAsB;AACpB,WAAO1B,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAE,UAAU,aAAZ,EAA2B,SAAS,mBAApC,EAArB,CAAP;AACD;AACD5B,MAAIqC,MAAJ,CAAWF,KAAX,EAAkB,WAAlB,EAA+B,UAACT,GAAD,EAAMY,OAAN,EAAkB;AAC/C,QAAIZ,GAAJ,EAAS;AACP,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAE,UAAU,aAAZ,EAA2B,SAAS,sBAApC,EAArB,CAAP;AACD;AACDpB,QAAI+B,MAAJ,GAAaD,QAAQE,OAArB;AACD,GALD;AAMA9B;AACD,CAfD;AAgBAZ,QAAQ,UAAR,EAAoBO,GAApB,EAAwB4B,WAAxB,EAAqCT,MAArC;AACA;AACAnB,IAAIoC,GAAJ,CAAQ,GAAR,EAAa,UAACjC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIiC,IAAJ,CAAS,yBAAT;AACD,CAFD;;AAIA;AACArC,IAAIoC,GAAJ,CAAQ,WAAR,EAAqBR,WAArB,EAAkC,UAACzB,GAAD,EAAMC,GAAN,EAAc;AAC9C,MAAIkC,2BAAJ;AACArC,KAAGsC,GAAH,CAAOD,GAAP,EAAY,EAAZ,EAAgB,UAACjB,GAAD,EAAMmB,MAAN,EAAiB;AAC/B,QAAInB,GAAJ,EAAS;AACP,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAEF,QAAF,EAArB,CAAP;AACD,KAFD,MAEO;AACL,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBiB,MAArB,CAAP;AACD;AACF,GAND;AAOD,CATD;;AAWA,IAAMC,UAAU,SAAVA,OAAU,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,MAAID,EAAEE,WAAF,GAAgBD,EAAEC,WAAtB,EAAmC;AAAE,WAAO,CAAC,CAAR;AAAW,GAAhD,MAAsD,IAAIF,EAAEE,WAAF,GAAgBD,EAAEC,WAAtB,EAAmC;AAAE,WAAO,CAAP;AAAU,GAA/C,MAAqD;AAAE,WAAO,CAAP;AAAU;AACxH,CAFD;AAGA;AACA5C,IAAIoC,GAAJ,CAAQ,UAAR,EAAoBR,WAApB,EAAiC,UAACzB,GAAD,EAAMC,GAAN,EAAc;AAC7C,MAAIkC,kLAAJ;AAKArC,KAAGsC,GAAH,CAAOD,GAAP,EAAY,EAAZ,EAAgB,UAAUjB,GAAV,EAAewB,IAAf,EAAqB;AACnC,QAAML,SAASK,IAAf;AACA,QAAIxB,GAAJ,EAAS;AACP,aAAOjB,IAAImB,IAAJ,CAAS,EAAEF,QAAF,EAAT,CAAP;AACD,KAFD,MAEO;;AAEL,UAAIiB,+JAAJ;;AAGArC,SAAGsC,GAAH,CAAOD,IAAP,EAAY,EAAZ,EAAgB,UAAUjB,GAAV,EAAeyB,OAAf,EAAwB;AACtC,YAAMC,UAAUD,OAAhB;AACA,YAAIE,WAAWR,OAAOS,MAAP,CAAcF,OAAd,CAAf;AACAC,iBAASE,IAAT,CAAcT,OAAd;AACArC,YAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnB,oBAAU,SADS;AAEnB,kBAAQyB;AAFW,SAArB;AAID,OARD;AASD;AACF,GAnBD;AAoBD,CA1BD;;AA4BA;AACAhD,IAAIoC,GAAJ,CAAQ,kBAAR,EAA4BR,WAA5B,EAAyC,UAACzB,GAAD,EAAMC,GAAN,EAAc;AACrD,MAAIkC,qDAAJ;;AAEArC,KAAGsC,GAAH,CAAOD,GAAP,EAAY,CAACnC,IAAI+B,MAAL,CAAZ,EAA0B,UAAUb,GAAV,EAAewB,IAAf,EAAqB;AAC7C,QAAIxB,GAAJ,EAAS;AACP,aAAOjB,IAAImB,IAAJ,CAAS,EAAEF,QAAF,EAAT,CAAP;AACD,KAFD,MAEO;AACL,UAAMmB,SAASK,IAAf;AACA,UAAIP,oDAAJ;AACArC,SAAGsC,GAAH,CAAOD,KAAP,EAAY,CAACnC,IAAI+B,MAAL,CAAZ,EAA0B,UAAUb,GAAV,EAAewB,IAAf,EAAqB;AAC7C,YAAIxB,GAAJ,EAAS;AACP,iBAAOjB,IAAImB,IAAJ,CAAS,EAAEF,QAAF,EAAT,CAAP;AACD;AACD,YAAM8B,aAAaN,IAAnB;AACA,YAAIG,WAAWR,OAAOS,MAAP,CAAcE,UAAd,CAAf;AACAH,iBAASE,IAAT,CAAcT,OAAd;AACArC,YAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACnB,oBAAU,SADS;AAEnB,kBAAQyB;AAFW,SAArB;AAID,OAXD;AAYD;AACF,GAnBD;AAoBD,CAvBD;;AAyBA;AACAhD,IAAIoC,GAAJ,CAAQ,aAAR,EAAuBR,WAAvB,EAAoC,UAACzB,GAAD,EAAMC,GAAN,EAAc;AAChD,MAAIkC,oDAAJ;AACArC,KAAGsC,GAAH,CAAOD,GAAP,EAAY,EAAZ,EAAgB,UAAUjB,GAAV,EAAemB,MAAf,EAAuB;AACrC,QAAInB,GAAJ,EAAS;AACP,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAEF,QAAF,EAArB,CAAP;AACD,KAFD,MAEO;AACL,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAC1B,kBAAU,SADgB;AAE1B,gBAAQiB;AAFkB,OAArB,CAAP;AAID;AACF,GATD;AAUD,CAZD;;AAcA;AACAxC,IAAIoD,IAAJ,CAAS,wBAAT,EAAmCxB,WAAnC,EAAgD,UAACzB,GAAD,EAAMC,GAAN,EAAc;AAC5D,MAAMiD,aAAalD,IAAImD,MAAJ,CAAWC,SAA9B;AACA,MAAIC,UAAU,GAAd;AACA,MAAIlB,kDAAJ;AACArC,KAAGsC,GAAH,CAAOD,GAAP,EAAY,CAACe,UAAD,CAAZ,EAA0B,UAAUhC,GAAV,EAAemB,MAAf,EAAuB;AAC/C,QAAInB,GAAJ,EAAS;AACP,aAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAEF,QAAF,EAArB,CAAP;AACD,KAFD,MAEO;AACLmC,gBAAUhB,OAAO,CAAP,EAAUgB,OAApB;AACA,UAAIA,WAAW,GAAf,EAAoB;AAClBlB;AACD,OAFD,MAEO;AACLA;AACD;AACDrC,SAAGwD,GAAH,CAAOnB,GAAP,EAAY,CAACe,UAAD,CAAZ,EAA0B,UAAUhC,GAAV,EAAe;AACvC,YAAIA,GAAJ,EAAS;AACP,iBAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAAEF,QAAF,EAArB,CAAP;AACD,SAFD,MAEO;AACL,iBAAOjB,IAAI2B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAC1B,uBAAW,sBADe;AAE1B,0BAAc8B;AAFY,WAArB,CAAP;AAID;AACF,OATD;AAUD;AACF,GArBD;AAsBD,CA1BD;;AA6BArD,IAAI0D,MAAJ,CAAW9D,IAAX,EAAiB,UAACyB,GAAD,EAAS;AACxB,MAAIA,GAAJ,EAAS;AACPsC,YAAQC,GAAR,CAAYvC,GAAZ;AACD;AACDsC,UAAQC,GAAR,CAAYC,gBAAMC,GAAN,wBAA+BlE,IAA/B,gCAAZ;AACD,CALD","file":"server.js","sourcesContent":["import express from 'express';\r\nimport chalk from 'chalk';\r\nimport multer from 'multer';\r\nconst bodyParser = require('body-parser');\r\nconst Cors = require('cors')\r\nconst jwt = require('jsonwebtoken');\r\nconst port = process.env.PORT || 3000;\r\nconst app = express();\r\nconst db = require('./db');\r\n\r\napp.use(function (req, res, next) {\r\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, DELETE, PUT, PATCH, OPTIONS\");\r\n  res.header(\"Access-Control-Allow-Headers\", \"*\");\r\n  next();\r\n});\r\n\r\napp.use('/images', express.static('images'));\r\n//to store images in a folder in node js\r\nconst storage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, 'images')\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null, `${Date.now()}_${file.originalname}`);\r\n  }\r\n})\r\nconst upload = multer({\r\n  storage: storage\r\n})\r\nconst errHandler=(err, req, res, next) => {\r\n  if (err instanceof multer.MulterError) {\r\n    return res.json({\r\n      error: \"upload failed\",\r\n      message: err.message\r\n    })\r\n  }\r\n}\r\napp.use(errHandler);\r\napp.use(Cors())\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json()); // parse form data client\r\n\r\n\r\nconst verifyToken = (req, res, next) => {\r\n  if (!req.headers.token) {\r\n    return res.status(401).json({ \"status\": \"token error\", \"error\": \"Unauthorized request\" })\r\n  }\r\n  const token = req.headers.token\r\n  if (token === 'null') {\r\n    return res.status(401).json({ \"status\": \"token error\", \"error\": \"Token is required\" })\r\n  }\r\n  jwt.verify(token, 'secretkey', (err, decoded) => {\r\n    if (err) {\r\n      return res.status(401).json({ \"status\": \"token error\", \"error\": \"Unauthorized request\" })\r\n    }\r\n    req.userId = decoded.user_id\r\n  })\r\n  next()\r\n}\r\nrequire(\"./routes\")(app,verifyToken, upload);\r\n//routes for creating and authenticating users\r\napp.get('/', (req, res) => {\r\n  res.send('Welcome to the TeamWork')\r\n})\r\n\r\n//get all users\r\napp.get('/v1/users', verifyToken, (req, res) => {\r\n  let sql = `select * from users`;\r\n  db.all(sql, [], (err, result) => {\r\n    if (err) {\r\n      return res.status(400).json({ err })\r\n    } else {\r\n      return res.status(200).json(result);\r\n    }\r\n  })\r\n})\r\n\r\nconst compare = (a, b) => {\r\n  if (a.dateCreated > b.dateCreated) { return -1 } else if (a.dateCreated < b.dateCreated) { return 1 } else { return 0 }\r\n}\r\n//get all articles and gif\r\napp.get('/v1/feed', verifyToken, (req, res) => {\r\n  let sql = `\r\n  select article_id,title,article,dateCreated,users_user_id,flagged,firstName,lastname,userImage\r\nfrom article\r\njoin users on users.user_id = article.users_user_id;\r\n  `\r\n  db.all(sql, [], function (err, rows) {\r\n    const result = rows\r\n    if (err) {\r\n      return res.json({ err })\r\n    } else {\r\n\r\n      let sql = `select gif_id,imageUrl,title,dateCreated,users_user_id, firstname,lastname,userImage\r\n      from gifs join users on users.user_id = gifs.users_user_id`;\r\n\r\n      db.all(sql, [], function (err, details) {\r\n        const result1 = details;\r\n        let all_feed = result.concat(result1);\r\n        all_feed.sort(compare);\r\n        res.status(200).json({\r\n          \"status\": \"success\",\r\n          \"data\": all_feed\r\n        })\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n//get all article and gif for a single user\r\napp.get('/v1/feed/:userId', verifyToken, (req, res) => {\r\n  let sql = `select * from article where users_user_id = ?`\r\n\r\n  db.all(sql, [req.userId], function (err, rows) {\r\n    if (err) {\r\n      return res.json({ err });\r\n    } else {\r\n      const result = rows;\r\n      let sql = `select * from gifs where users_user_id = ?`;\r\n      db.all(sql, [req.userId], function (err, rows) {\r\n        if (err) {\r\n          return res.json({ err });\r\n        }\r\n        const gif_result = rows;\r\n        let all_feed = result.concat(gif_result);\r\n        all_feed.sort(compare);\r\n        res.status(200).json({\r\n          \"status\": \"success\",\r\n          \"data\": all_feed\r\n        })\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n//get all flagged post\r\napp.get('/v1/flagged', verifyToken, (req, res) => {\r\n  let sql = `select * from article where flagged = 't' `\r\n  db.all(sql, [], function (err, result) {\r\n    if (err) {\r\n      return res.status(400).json({ err })\r\n    } else {\r\n      return res.status(200).json({\r\n        \"status\": \"success\",\r\n        \"data\": result\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n//flag a post\r\napp.post('/v1/flagged/:articleId', verifyToken, (req, res) => {\r\n  const article_id = req.params.articleId;\r\n  let flagged = 't';\r\n  let sql = `select * from article where article_id = ?`;\r\n  db.all(sql, [article_id], function (err, result) {\r\n    if (err) {\r\n      return res.status(400).json({ err });\r\n    } else {\r\n      flagged = result[0].flagged;\r\n      if (flagged == 'f') {\r\n        sql = `update article set flagged = 't' where article_id = ?`;\r\n      } else {\r\n        sql = `update article set flagged = 'f' where article_id = ?`;\r\n      }\r\n      db.run(sql, [article_id], function (err) {\r\n        if (err) {\r\n          return res.status(400).json({ err })\r\n        } else {\r\n          return res.status(200).json({\r\n            \"message\": \"flagged successfully\",\r\n            \"article_id\": article_id,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n\r\napp.listen(port, (err) => {\r\n  if (err) {\r\n    console.log(err)\r\n  }\r\n  console.log(chalk.red(`listening of port ${port}. starting app in dev mode`))\r\n})"]}